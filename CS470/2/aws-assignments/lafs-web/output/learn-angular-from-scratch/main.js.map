{"version":3,"sources":["webpack:///./sdk/index.ts","webpack:///./sdk/lb.config.ts","webpack:///./sdk/models/Answer.ts","webpack:///./sdk/models/BaseModels.ts","webpack:///./sdk/models/Question.ts","webpack:///./sdk/models/User.ts","webpack:///./sdk/models/index.ts","webpack:///./sdk/services/core/auth.service.ts","webpack:///./sdk/services/core/base.service.ts","webpack:///./sdk/services/core/error.service.ts","webpack:///./sdk/services/core/index.ts","webpack:///./sdk/services/core/search.params.ts","webpack:///./sdk/services/custom/Answer.ts","webpack:///./sdk/services/custom/Question.ts","webpack:///./sdk/services/custom/SDKModels.ts","webpack:///./sdk/services/custom/User.ts","webpack:///./sdk/services/custom/index.ts","webpack:///./sdk/services/custom/logger.service.ts","webpack:///./sdk/services/index.ts","webpack:///./sdk/storage/cookie.browser.ts","webpack:///./sdk/storage/storage.browser.ts","webpack:///./sdk/storage/storage.swaps.ts","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/categories/categories.component.html","webpack:///./src/app/categories/categories.component.ts","webpack:///./src/app/categories/categories.resolver.ts","webpack:///./src/app/categories/categories.scss","webpack:///./src/app/category-questions/category-questions.component.html","webpack:///./src/app/category-questions/category-questions.component.ts","webpack:///./src/app/category-questions/category-questions.resolver.ts","webpack:///./src/app/category-questions/category-questions.scss","webpack:///./src/app/category-questions/delete-question/delete-question-modal.component.html","webpack:///./src/app/category-questions/delete-question/delete-question-modal.component.ts","webpack:///./src/app/category-questions/new-question/new-question-modal.component.html","webpack:///./src/app/category-questions/new-question/new-question-modal.component.ts","webpack:///./src/app/question-answers/delete-answer/delete-answer-modal.component.html","webpack:///./src/app/question-answers/delete-answer/delete-answer-modal.component.ts","webpack:///./src/app/question-answers/new-answer/new-answer-modal.component.html","webpack:///./src/app/question-answers/new-answer/new-answer-modal.component.ts","webpack:///./src/app/question-answers/question-answers.component.html","webpack:///./src/app/question-answers/question-answers.component.ts","webpack:///./src/app/question-answers/question-answers.resolver.ts","webpack:///./src/app/question-answers/question-answers.scss","webpack:///./src/app/question-answers/update-answer/update-answer-modal.component.html","webpack:///./src/app/question-answers/update-answer/update-answer-modal.component.ts","webpack:///./src/app/services/answers.service.ts","webpack:///./src/app/services/categories.service.ts","webpack:///./src/app/services/questions.service.ts","webpack:///./src/app/shared/breadcrumb/breadcrumb.component.html","webpack:///./src/app/shared/breadcrumb/breadcrumb.component.ts","webpack:///./src/app/shared/breadcrumb/styles/breadcrumb.scss","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/slugify.pipe.ts","webpack:///./src/app/styles/modals.scss","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* tslint:disable */\n/**\n* @module SDKModule\n* @author Jonathan Casarrubias <t:@johncasarrubias> <gh:jonathan-casarrubias>\n* @license MIT 2016 Jonathan Casarrubias\n* @version 2.1.0\n* @description\n* The SDKModule is a generated Software Development Kit automatically built by\n* the LoopBack SDK Builder open source module.\n*\n* The SDKModule provides Angular 2 >= RC.5 support, which means that NgModules\n* can import this Software Development Kit as follows:\n*\n*\n* APP Route Module Context\n* ============================================================================\n* import { NgModule }       from '@angular/core';\n* import { BrowserModule }  from '@angular/platform-browser';\n* // App Root \n* import { AppComponent }   from './app.component';\n* // Feature Modules\n* import { SDK[Browser|Node|Native]Module } from './shared/sdk/sdk.module';\n* // Import Routing\n* import { routing }        from './app.routing';\n* @NgModule({\n*  imports: [\n*    BrowserModule,\n*    routing,\n*    SDK[Browser|Node|Native]Module.forRoot()\n*  ],\n*  declarations: [ AppComponent ],\n*  bootstrap:    [ AppComponent ]\n* })\n* export class AppModule { }\n*\n**/\nimport { JSONSearchParams } from './services/core/search.params';\nimport { ErrorHandler } from './services/core/error.service';\nimport { LoopBackAuth } from './services/core/auth.service';\nimport { LoggerService } from './services/custom/logger.service';\nimport { SDKModels } from './services/custom/SDKModels';\nimport { InternalStorage, SDKStorage } from './storage/storage.swaps';\nimport { HttpModule } from '@angular/http';\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CookieBrowser } from './storage/cookie.browser';\nimport { StorageBrowser } from './storage/storage.browser';\nimport { UserApi } from './services/custom/User';\nimport { QuestionApi } from './services/custom/Question';\nimport { AnswerApi } from './services/custom/Answer';\n/**\n* @module SDKBrowserModule\n* @description\n* This module should be imported when building a Web Application in the following scenarios:\n*\n*  1.- Regular web application\n*  2.- Angular universal application (Browser Portion)\n*  3.- Progressive applications (Angular Mobile, Ionic, WebViews, etc)\n**/\n@NgModule({\n  imports:      [ CommonModule, HttpModule ],\n  declarations: [ ],\n  exports:      [ ],\n  providers:    [\n    ErrorHandler\n  ]\n})\nexport class SDKBrowserModule {\n  static forRoot(internalStorageProvider: any = {\n    provide: InternalStorage,\n    useClass: CookieBrowser\n  }): ModuleWithProviders {\n    return {\n      ngModule  : SDKBrowserModule,\n      providers : [\n        LoopBackAuth,\n        LoggerService,\n        JSONSearchParams,\n        SDKModels,\n        UserApi,\n        QuestionApi,\n        AnswerApi,\n        internalStorageProvider,\n        { provide: SDKStorage, useClass: StorageBrowser }\n      ]\n    };\n  }\n}\n/**\n* Have Fun!!!\n* - Jon\n**/\nexport * from './models/index';\nexport * from './services/index';\nexport * from './lb.config';\nexport * from './storage/storage.swaps';\nexport { CookieBrowser } from './storage/cookie.browser';\nexport { StorageBrowser } from './storage/storage.browser';\n\n","/* tslint:disable */\n/**\n* @module LoopBackConfig\n* @description\n*\n* The LoopBackConfig module help developers to externally \n* configure the base url and api version for loopback.io\n*\n* Example\n*\n* import { LoopBackConfig } from './sdk';\n* \n* @Component() // No metadata needed for this module\n*\n* export class MyApp {\n*   constructor() {\n*     LoopBackConfig.setBaseURL('http://localhost:3000');\n*     LoopBackConfig.setApiVersion('api');\n*   }\n* }\n**/\nexport class LoopBackConfig {\n  private static path: string = '//0.0.0.0:3000';\n  private static version: string | number = 'api';\n  private static authPrefix: string = '';\n  private static debug: boolean = true;\n  private static filterOn: string = 'headers';\n  private static secure: boolean = false;\n  private static withCredentials: boolean = false;\n\n  public static setApiVersion(version: string = 'api'): void {\n    LoopBackConfig.version = version;\n  }\n  \n  public static getApiVersion(): string | number {\n    return LoopBackConfig.version;\n  }\n\n  public static setBaseURL(url: string = '/'): void {\n    LoopBackConfig.path = url;\n  }\n  \n  public static getPath(): string {\n    return LoopBackConfig.path;\n  }\n\n  public static setAuthPrefix(authPrefix: string = ''): void {\n    LoopBackConfig.authPrefix = authPrefix;\n  }\n\n  public static getAuthPrefix(): string {\n    return LoopBackConfig.authPrefix;\n  }\n\n  public static setDebugMode(isEnabled: boolean): void {\n    LoopBackConfig.debug = isEnabled;\n  }\n\n  public static debuggable(): boolean {\n    return LoopBackConfig.debug;\n  }\n\n  public static filterOnUrl(): void {\n    LoopBackConfig.filterOn = 'url';\n  }\n\n  public static filterOnHeaders(): void {\n    LoopBackConfig.filterOn = 'headers';\n  }\n\n  public static isHeadersFilteringSet(): boolean {\n    return (LoopBackConfig.filterOn === 'headers');\n  }\n\n  public static setSecureWebSockets(): void {\n    LoopBackConfig.secure = true;\n  }\n\n  public static unsetSecureWebSockets(): void {\n    LoopBackConfig.secure = false;\n  }\n\n  public static isSecureWebSocketsSet(): boolean {\n    return LoopBackConfig.secure;\n  }\n\n  public static setRequestOptionsCredentials(withCredentials: boolean = false): void {\n    LoopBackConfig.withCredentials = withCredentials;\n  }\n\n  public static getRequestOptionsCredentials(): boolean {\n    return LoopBackConfig.withCredentials;\n  }\n}\n","/* tslint:disable */\nimport {\n  Question\n} from '../index';\n\ndeclare var Object: any;\nexport interface AnswerInterface {\n  \"answer\": string;\n  \"negativeVotes\"?: number;\n  \"positiveVotes\"?: number;\n  \"id\"?: any;\n  \"questionId\"?: any;\n  question?: Question;\n}\n\nexport class Answer implements AnswerInterface {\n  \"answer\": string;\n  \"negativeVotes\": number;\n  \"positiveVotes\": number;\n  \"id\": any;\n  \"questionId\": any;\n  question: Question;\n  constructor(data?: AnswerInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Answer`.\n   */\n  public static getModelName() {\n    return \"Answer\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Answer for dynamic purposes.\n  **/\n  public static factory(data: AnswerInterface): Answer{\n    return new Answer(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Answer',\n      plural: 'Answers',\n      path: 'Answers',\n      idName: 'id',\n      properties: {\n        \"answer\": {\n          name: 'answer',\n          type: 'string'\n        },\n        \"negativeVotes\": {\n          name: 'negativeVotes',\n          type: 'number',\n          default: 0\n        },\n        \"positiveVotes\": {\n          name: 'positiveVotes',\n          type: 'number',\n          default: 0\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n        \"questionId\": {\n          name: 'questionId',\n          type: 'any'\n        },\n      },\n      relations: {\n        question: {\n          name: 'question',\n          type: 'Question',\n          model: 'Question',\n          relationType: 'belongsTo',\n                  keyFrom: 'questionId',\n          keyTo: 'id'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\n\n\ndeclare var Object: any;\nexport interface LoopBackFilter {\n  fields?: any;\n  include?: any;\n  limit?: any;\n  order?: any;\n  skip?: any;\n  offset?: any;\n  where?: any;\n}\n\nexport interface AccessTokenInterface {\n  \"id\"?: string;\n  \"ttl\"?: number;\n  \"scopes\"?: [\"string\"];\n  \"created\"?: Date;\n  \"userId\"?: string;\n  \"user\"?: any;\n}\n\nexport class AccessToken implements AccessTokenInterface {\n  \"id\": string;\n  \"ttl\": number;\n  \"scopes\": [\"string\"];\n  \"created\": Date;\n  \"userId\": string;\n  \"user\": any;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `AccessToken`.\n   */\n  public static getModelName() {\n    return \"AccessToken\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of AccessToken for dynamic purposes.\n  **/\n  public static factory(data: AccessTokenInterface): AccessToken{\n    return new AccessToken(data);\n  }  \n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'AccessToken',\n      plural: 'AccessTokens',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'string'\n        },\n        \"ttl\": {\n          name: 'ttl',\n          type: 'number',\n          default: 1209600\n        },\n        \"scopes\": {\n          name: 'scopes',\n          type: '[\"string\"]'\n        },\n        \"created\": {\n          name: 'created',\n          type: 'Date'\n        },\n        \"userId\": {\n          name: 'userId',\n          type: 'string'\n        },\n      },\n      relations: {\n        user: {\n          name: 'user',\n          type: 'User',\n          model: 'User'\n        },\n      }\n    }\n  }\n}\n\nexport class SDKToken implements AccessTokenInterface {\n  id: any = null;\n  ttl: number = null;\n  scopes: any = null;\n  created: any = null;\n  userId: any = null;\n  user: any = null;\n  rememberMe: boolean = null;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n}\n/**\n* This GeoPoint represents both, LoopBack and MongoDB GeoPoint\n**/\nexport interface GeoPoint  {\n    lat?: number;\n    lng?: number;\n    type?: string;\n    coordinates?: number[];\n}\n\nexport interface StatFilter {\n    range: string,\n    custom?: {\n      start: string,\n      end: string\n    },\n    where?: {},\n    groupBy?: string\n}\n","/* tslint:disable */\nimport {\n  Answer\n} from '../index';\n\ndeclare var Object: any;\nexport interface QuestionInterface {\n  \"categorySlug\"?: string;\n  \"questionSlug\": string;\n  \"question\": string;\n  \"negativeVotes\"?: number;\n  \"positiveVotes\"?: number;\n  \"id\"?: any;\n  answers?: Answer[];\n}\n\nexport class Question implements QuestionInterface {\n  \"categorySlug\": string;\n  \"questionSlug\": string;\n  \"question\": string;\n  \"negativeVotes\": number;\n  \"positiveVotes\": number;\n  \"id\": any;\n  answers: Answer[];\n  constructor(data?: QuestionInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Question`.\n   */\n  public static getModelName() {\n    return \"Question\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Question for dynamic purposes.\n  **/\n  public static factory(data: QuestionInterface): Question{\n    return new Question(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Question',\n      plural: 'Questions',\n      path: 'Questions',\n      idName: 'id',\n      properties: {\n        \"categorySlug\": {\n          name: 'categorySlug',\n          type: 'string'\n        },\n        \"questionSlug\": {\n          name: 'questionSlug',\n          type: 'string'\n        },\n        \"question\": {\n          name: 'question',\n          type: 'string'\n        },\n        \"negativeVotes\": {\n          name: 'negativeVotes',\n          type: 'number',\n          default: 0\n        },\n        \"positiveVotes\": {\n          name: 'positiveVotes',\n          type: 'number',\n          default: 0\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n      },\n      relations: {\n        answers: {\n          name: 'answers',\n          type: 'Answer[]',\n          model: 'Answer',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'questionId'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface UserInterface {\n  \"realm\"?: string;\n  \"username\"?: string;\n  \"email\": string;\n  \"emailVerified\"?: boolean;\n  \"id\"?: number;\n  \"password\"?: string;\n  accessTokens?: any[];\n}\n\nexport class User implements UserInterface {\n  \"realm\": string;\n  \"username\": string;\n  \"email\": string;\n  \"emailVerified\": boolean;\n  \"id\": number;\n  \"password\": string;\n  accessTokens: any[];\n  constructor(data?: UserInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `User`.\n   */\n  public static getModelName() {\n    return \"User\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of User for dynamic purposes.\n  **/\n  public static factory(data: UserInterface): User{\n    return new User(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'User',\n      plural: 'Users',\n      path: 'Users',\n      idName: 'id',\n      properties: {\n        \"realm\": {\n          name: 'realm',\n          type: 'string'\n        },\n        \"username\": {\n          name: 'username',\n          type: 'string'\n        },\n        \"email\": {\n          name: 'email',\n          type: 'string'\n        },\n        \"emailVerified\": {\n          name: 'emailVerified',\n          type: 'boolean'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n        \"password\": {\n          name: 'password',\n          type: 'string'\n        },\n      },\n      relations: {\n        accessTokens: {\n          name: 'accessTokens',\n          type: 'any[]',\n          model: '',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'userId'\n        },\n      }\n    }\n  }\n}\n","/* tslint:disable */\nexport * from './User';\nexport * from './Question';\nexport * from './Answer';\nexport * from './BaseModels';\n\n","/* tslint:disable */\ndeclare var Object: any;\nimport { Injectable, Inject } from '@angular/core';\nimport { InternalStorage } from '../../storage/storage.swaps';\nimport { SDKToken } from '../../models/BaseModels';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\n@Injectable()\nexport class LoopBackAuth {\n  /**\n   * @type {SDKToken}\n   **/\n  private token: SDKToken = new SDKToken();\n  /**\n   * @type {string}\n   **/\n  protected prefix: string = '$LoopBackSDK$';\n  /**\n   * @method constructor\n   * @param {InternalStorage} storage Internal Storage Driver\n   * @description\n   * The constructor will initialize the token loading data from storage\n   **/\n  constructor(@Inject(InternalStorage) protected storage: InternalStorage) {\n    this.token.id = this.load('id');\n    this.token.user = this.load('user');\n    this.token.userId = this.load('userId');\n    this.token.created = this.load('created');\n    this.token.ttl = this.load('ttl');\n    this.token.rememberMe = this.load('rememberMe');\n  }\n  /**\n   * @method setRememberMe\n   * @param {boolean} value Flag to remember credentials\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setRememberMe(value: boolean): void {\n    this.token.rememberMe = value;\n  }\n  /**\n   * @method setUser\n   * @param {any} user Any type of user model\n   * @return {void}\n   * @description\n   * This method will update the user information and persist it if the\n   * rememberMe flag is set.\n   **/\n  public setUser(user: any) {\n    this.token.user = user;\n    this.save();\n  }\n  /**\n   * @method setToken\n   * @param {SDKToken} token SDKToken or casted AccessToken instance\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setToken(token: SDKToken): void {\n    this.token = Object.assign({}, this.token, token);\n    this.save();\n  }\n  /**\n   * @method getToken\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials.\n   **/\n  public getToken(): SDKToken {\n    return <SDKToken>this.token;\n  }\n  /**\n   * @method getAccessTokenId\n   * @return {string}\n   * @description\n   * This method will return the actual token string, not the object instance.\n   **/\n  public getAccessTokenId(): string {\n    return this.token.id;\n  }\n  /**\n   * @method getCurrentUserId\n   * @return {any}\n   * @description\n   * This method will return the current user id, it can be number or string.\n   **/\n  public getCurrentUserId(): any {\n    return this.token.userId;\n  }\n  /**\n   * @method getCurrentUserData\n   * @return {any}\n   * @description\n   * This method will return the current user instance.\n   **/\n  public getCurrentUserData(): any {\n    return (typeof this.token.user === 'string') ? JSON.parse(this.token.user) : this.token.user;\n  }\n  /**\n   * @method save\n   * @return {boolean} Whether or not the information was saved\n   * @description\n   * This method will save in either local storage or cookies the current credentials.\n   * But only if rememberMe is enabled.\n   **/\n  public save(): boolean {\n      let today = new Date();\n      let expires = new Date(today.getTime() + (this.token.ttl * 1000));\n      this.persist('id', this.token.id, expires);\n      this.persist('user', this.token.user, expires);\n      this.persist('userId', this.token.userId, expires);\n      this.persist('created', this.token.created, expires);\n      this.persist('ttl', this.token.ttl, expires);\n      this.persist('rememberMe', this.token.rememberMe, expires);\n      return true;\n  };\n  /**\n   * @method load\n   * @param {string} prop Property name\n   * @return {any} Any information persisted in storage\n   * @description\n   * This method will load either from local storage or cookies the provided property.\n   **/\n  protected load(prop: string): any {\n    return this.storage.get(`${this.prefix}${prop}`);\n  }\n  /**\n   * @method clear\n   * @return {void}\n   * @description\n   * This method will clear cookies or the local storage.\n   **/\n  public clear(): void {\n    Object.keys(this.token).forEach((prop: string) => this.storage.remove(`${this.prefix}${prop}`));\n    this.token = new SDKToken();\n  }\n  /**\n   * @method persist\n   * @return {void}\n   * @description\n   * This method saves values to storage\n   **/\n  protected persist(prop: string, value: any, expires?: Date): void {\n    try {\n      this.storage.set(\n        `${this.prefix}${prop}`,\n        (typeof value === 'object') ? JSON.stringify(value) : value,\n        this.token.rememberMe?expires:null\n      );\n    }\n    catch (err) {\n      console.error('Cannot access local/session storage:', err);\n    }\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Headers, Request, RequestOptions } from '@angular/http';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { JSONSearchParams } from './search.params';\nimport { ErrorHandler } from './error.service';\nimport { LoopBackAuth } from './auth.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackFilter, AccessToken } from '../../models/BaseModels';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n// Making Sure EventSource Type is available to avoid compilation issues.\ndeclare var EventSource: any;\n/**\n* @module BaseLoopBackApi\n* @author Jonathan Casarrubias <@johncasarrubias> <github:jonathan-casarrubias>\n* @author Nikolay Matiushenkov <https://github.com/mnvx>\n* @license MIT\n* @description\n* Abstract class that will be implemented in every custom service automatically built\n* by the sdk builder.\n* It provides the core functionallity for every API call, either by HTTP Calls or by\n* WebSockets.\n**/\n@Injectable()\nexport abstract class BaseLoopBackApi {\n\n  protected path: string;\n  protected model: any;\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    this.model = this.models.get(this.getModelName());\n  }\n  /**\n   * @method request\n   * @param {string}  method      Request method (GET, POST, PUT)\n   * @param {string}  url         Request url (my-host/my-url/:id)\n   * @param {any}     routeParams Values of url parameters\n   * @param {any}     urlParams   Parameters for building url (filter and other)\n   * @param {any}     postBody    Request postBody\n   * @return {Observable<any>}\n   * @description\n   * This is a core method, every HTTP Call will be done from here, every API Service will\n   * extend this class and use this method to get RESTful communication.\n   **/\n  public request(\n    method         : string,\n    url            : string,\n    routeParams    : any = {},\n    urlParams      : any = {},\n    postBody       : any = {},\n    pubsub         : boolean = false,\n    customHeaders? : Function\n  ): Observable<any> {\n    // Transpile route variables to the actual request Values\n    Object.keys(routeParams).forEach((key: string) => {\n      url = url.replace(new RegExp(\":\" + key + \"(\\/|$)\", \"g\"), routeParams[key] + \"$1\")\n    });\n    if (pubsub) {\n      console.info('SDK: PubSub functionality is disabled, generate SDK using -io enabled');\n    } else {\n      // Headers to be sent\n      let headers: Headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      // Authenticate request\n      this.authenticate(url, headers);\n      // Body fix for built in remote methods using \"data\", \"options\" or \"credentials\n      // that are the actual body, Custom remote method properties are different and need\n      // to be wrapped into a body object\n      let body: any;\n      let postBodyKeys = typeof postBody === 'object' ? Object.keys(postBody) : []\n      if (postBodyKeys.length === 1) {\n        body = postBody[postBodyKeys.shift()];\n      } else {\n        body = postBody;\n      }\n      let filter: string = '';\n      // Separate filter object from url params and add to search query\n      if (urlParams.filter) {\n        if (LoopBackConfig.isHeadersFilteringSet()) {\n          headers.append('filter', JSON.stringify(urlParams.filter));\n        } else {\n          filter = `?filter=${ encodeURIComponent(JSON.stringify(urlParams.filter))}`;\n        }\n        delete urlParams.filter;\n      }\n      // Separate where object from url params and add to search query\n      /**\n      CODE BELOW WILL GENERATE THE FOLLOWING ISSUES:\n      - https://github.com/mean-expert-official/loopback-sdk-builder/issues/356\n      - https://github.com/mean-expert-official/loopback-sdk-builder/issues/328 \n      if (urlParams.where) {\n        headers.append('where', JSON.stringify(urlParams.where));\n        delete urlParams.where;\n      }\n      **/\n      if (typeof customHeaders === 'function') {\n        headers = customHeaders(headers);\n      }\n      this.searchParams.setJSON(urlParams);\n      let request: Request = new Request(\n        new RequestOptions({\n          headers        : headers,\n          method         : method,\n          url            : `${url}${filter}`,\n          search         : Object.keys(urlParams).length > 0 ? this.searchParams.getURLSearchParams() : null,\n          body           : body ? JSON.stringify(body) : undefined,\n          withCredentials: LoopBackConfig.getRequestOptionsCredentials()\n        })\n      );\n      return this.http.request(request)\n        .map((res: any) => (res.text() != \"\" ? res.json() : {}))\n        .catch((e) => this.errorHandler.handleError(e));\n    }\n  }\n  /**\n   * @method authenticate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {string} url Server URL\n   * @param {Headers} headers HTTP Headers\n   * @return {void}\n   * @description\n   * This method will try to authenticate using either an access_token or basic http auth\n   */\n  public authenticate<T>(url: string, headers: Headers): void {\n    if (this.auth.getAccessTokenId()) {\n      headers.append(\n        'Authorization',\n        LoopBackConfig.getAuthPrefix() + this.auth.getAccessTokenId()\n      );\n    }\n  }\n  /**\n   * @method create\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic create method\n   */\n  public create<T>(data: T, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method createMany\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic create many method\n   */\n  public createMany<T>(data: T[], customHeaders?: Function): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .map((datum: T[]) => datum.map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method findById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {any} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic findById method\n   */\n  public findById<T>(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (filter) _urlParams.filter = filter;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, _urlParams, undefined, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method find\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[+>}\n   * @description\n   * Generic find method\n   */\n  public find<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T[]> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .map((datum: T[]) => datum.map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method exists\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic exists method\n   */\n  public exists<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id/exists'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders);\n  }\n  /**\n   * @method findOne\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic findOne method\n   */\n  public findOne<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'findOne'\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method updateAll\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic updateAll method\n   */\n  public updateAll<T>(where: any = {}, data: T, customHeaders?: Function): Observable<{ count: 'number' }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'update'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders);\n  }\n  /**\n   * @method deleteById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic deleteById method\n   */\n  public deleteById<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('DELETE', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method count\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<{ count: number }>}\n   * @description\n   * Generic count method\n   */\n  public count(where: any = {}, customHeaders?: Function): Observable<{ count: number }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'count'\n    ].join('/'), undefined, _urlParams, undefined, null, customHeaders);\n  }\n  /**\n   * @method updateAttributes\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic updateAttributes method\n   */\n  public updateAttributes<T>(id: any, data: T, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method upsert\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method\n   */\n  public upsert<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method upsertPatch\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method using patch http method\n   */\n  public upsertPatch<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PATCH', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method upsertWithWhere\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsertWithWhere method\n   */\n  public upsertWithWhere<T>(where: any = {}, data: any = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'upsertWithWhere'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method replaceOrCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceOrCreate method\n   */\n  public replaceOrCreate<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'replaceOrCreate'\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method replaceById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceById method\n   */\n  public replaceById<T>(id: any, data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id', 'replace'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method createChangeStream\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<any>}\n   * @description\n   * Generic createChangeStream method\n   */\n  public createChangeStream(): Observable<any> {\n    let subject = new Subject();\n    if (typeof EventSource !== 'undefined') {\n      let emit   = (msg: any) => subject.next(JSON.parse(msg.data));\n      var source = new EventSource([\n        LoopBackConfig.getPath(),\n        LoopBackConfig.getApiVersion(),\n        this.model.getModelDefinition().path,\n        'change-stream'\n      ].join('/'));\n      source.addEventListener('data', emit);\n      source.onerror = emit;\n    } else {\n      console.warn('SDK Builder: EventSource is not supported'); \n    }\n    return subject.asObservable();\n  }\n  /**\n   * @method getModelName\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {string}\n   * @description\n   * Abstract getModelName method\n   */\n  abstract getModelName(): string;\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n//import { ErrorObservable } from 'rxjs/observable/ErrorObservable';\nimport 'rxjs/add/observable/throw';\n/**\n * Default error handler\n */\n@Injectable()\nexport class ErrorHandler {\n  // ErrorObservable when rxjs version < rc.5\n  // ErrorObservable<string> when rxjs version = rc.5\n  // I'm leaving any for now to avoid breaking apps using both versions\n  public handleError(error: Response): any {\n    return Observable.throw(error.json().error || 'Server error');\n  }\n}\n","/* tslint:disable */\nexport * from './auth.service';\nexport * from './error.service';\nexport * from './search.params';\nexport * from './base.service';\n\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { URLSearchParams } from '@angular/http';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module JSONSearchParams\n* @license MIT\n* @description\n* JSON Parser and Wrapper for the Angular2 URLSearchParams\n* This module correctly encodes a json object into a query string and then creates\n* an instance of the URLSearchParams component for later use in HTTP Calls\n**/\n@Injectable()\nexport class JSONSearchParams {\n\n    private _usp: URLSearchParams;\n\n    public setJSON(obj: any) {\n        this._usp = new URLSearchParams(this._JSON2URL(obj, false));\n    }\n\n    public getURLSearchParams(): URLSearchParams {\n        return this._usp;\n    }\n\n    private _JSON2URL(obj: any, parent: any) {\n        var parts: any = [];\n        for (var key in obj)\n        parts.push(this._parseParam(key, obj[key], parent));\n        return parts.join('&');\n    }\n\n    private _parseParam(key: string, value: any, parent: string) {\n        let processedKey = parent ? parent + '[' + key + ']' : key;\n        if (value && (<string>(typeof value) === 'object' || Array.isArray(value))) {\n            return this._JSON2URL(value, processedKey);\n        }\n        return processedKey + '=' + value;\n    }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { Answer } from '../../models/Answer';\nimport { Question } from '../../models/Question';\n\n\n/**\n * Api services for the `Answer` model.\n */\n@Injectable()\nexport class AnswerApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Fetches belongsTo relation question.\n   *\n   * @param {any} id answer id\n   *\n   * @param {boolean} refresh \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Answer` object.)\n   * </em>\n   */\n  public getQuestion(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/answers/:id/question\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Answer` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/answers\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id answer id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Answer` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/answers/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Answer`.\n   */\n  public getModelName() {\n    return \"Answer\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { Question } from '../../models/Question';\nimport { Answer } from '../../models/Answer';\n\n\n/**\n * Api services for the `Question` model.\n */\n@Injectable()\nexport class QuestionApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Find a related item by id for answers.\n   *\n   * @param {any} id question id\n   *\n   * @param {any} fk Foreign key for answers\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Question` object.)\n   * </em>\n   */\n  public findByIdAnswers(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/questions/:id/answers/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for answers.\n   *\n   * @param {any} id question id\n   *\n   * @param {any} fk Foreign key for answers\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdAnswers(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/questions/:id/answers/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for answers.\n   *\n   * @param {any} id question id\n   *\n   * @param {any} fk Foreign key for answers\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Question` object.)\n   * </em>\n   */\n  public updateByIdAnswers(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/questions/:id/answers/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries answers of question.\n   *\n   * @param {any} id question id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Question` object.)\n   * </em>\n   */\n  public getAnswers(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/questions/:id/answers\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in answers of this model.\n   *\n   * @param {any} id question id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Question` object.)\n   * </em>\n   */\n  public createAnswers(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/questions/:id/answers\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all answers of this model.\n   *\n   * @param {any} id question id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteAnswers(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/questions/:id/answers\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts answers of question.\n   *\n   * @param {any} id question id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countAnswers(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/questions/:id/answers/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Question` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/questions\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id question id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Question` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/questions/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in answers of this model.\n   *\n   * @param {any} id question id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Question` object.)\n   * </em>\n   */\n  public createManyAnswers(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/questions/:id/answers\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Question`.\n   */\n  public getModelName() {\n    return \"Question\";\n  }\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { User } from '../../models/User';\nimport { Question } from '../../models/Question';\nimport { Answer } from '../../models/Answer';\n\nexport interface Models { [name: string]: any }\n\n@Injectable()\nexport class SDKModels {\n\n  private models: Models = {\n    User: User,\n    Question: Question,\n    Answer: Answer,\n    \n  };\n\n  public get(modelName: string): any {\n    return this.models[modelName];\n  }\n\n  public getAll(): Models {\n    return this.models;\n  }\n\n  public getModelNames(): string[] {\n    return Object.keys(this.models);\n  }\n}\n","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, SDKToken, AccessToken } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { User } from '../../models/User';\n\n\n/**\n * Api services for the `User` model.\n */\n@Injectable()\nexport class UserApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Find a related item by id for accessTokens.\n   *\n   * @param {any} id User id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public findByIdAccessTokens(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for accessTokens.\n   *\n   * @param {any} id User id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdAccessTokens(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for accessTokens.\n   *\n   * @param {any} id User id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public updateByIdAccessTokens(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries accessTokens of User.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public getAccessTokens(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in accessTokens of this model.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public createAccessTokens(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all accessTokens of this model.\n   *\n   * @param {any} id User id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteAccessTokens(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts accessTokens of User.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countAccessTokens(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Login a user with username/email and password.\n   *\n   * @param {string} include Related objects to include in the response. See the description of return value for more details.\n   *   Default value: `user`.\n   *\n   *  - `rememberMe` - `boolean` - Whether the authentication credentials\n   *     should be remembered in localStorage across app/browser restarts.\n   *     Default: `true`.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * The response body contains properties of the AccessToken created on login.\n   * Depending on the value of `include` parameter, the body may contain additional properties:\n   * \n   *   - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)\n   * \n   *\n   */\n  public login(credentials: any, include: any = 'user', rememberMe: boolean = true, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/login\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      credentials: credentials\n    };\n    let _urlParams: any = {};\n    if (typeof include !== 'undefined' && include !== null) _urlParams.include = include;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders)\n      .map(\n        (response: any) => {\n          response.ttl = parseInt(response.ttl);\n          response.rememberMe = rememberMe;\n          this.auth.setToken(response);\n          return response;\n        }\n      );\n      return result;\n      \n  }\n\n  /**\n   * Logout a user with access token.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public logout(customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/logout\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n       _urlParams.access_token = this.auth.getAccessTokenId();\n    this.auth.clear(); \n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Trigger user's identity verification with configured verifyOptions\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public verify(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/verify\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Confirm a user registration with identity verification token.\n   *\n   * @param {string} uid \n   *\n   * @param {string} token \n   *\n   * @param {string} redirect \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public confirm(uid: any, token: any, redirect: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/confirm\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof uid !== 'undefined' && uid !== null) _urlParams.uid = uid;\n    if (typeof token !== 'undefined' && token !== null) _urlParams.token = token;\n    if (typeof redirect !== 'undefined' && redirect !== null) _urlParams.redirect = redirect;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Reset password for a user with email.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public resetPassword(options: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/reset\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      options: options\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Change a user's password.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `oldPassword` – `{string}` - \n   *\n   *  - `newPassword` – `{string}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public changePassword(oldPassword: any, newPassword: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/change-password\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: {\n        oldPassword: oldPassword,\n        newPassword: newPassword\n      }\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Reset user's password via a password-reset token.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `newPassword` – `{string}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public setPassword(newPassword: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/reset-password\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: {\n        newPassword: newPassword\n      }\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in accessTokens of this model.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public createManyAccessTokens(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n  /**\n   * @ngdoc method\n   * @name sdk.User#getCurrent\n   * @methodOf sdk.User\n   *\n   * @description\n   *\n   * Get data of the currently logged user. Fail with HTTP result 401\n   * when there is no user logged in.\n   *\n   * @returns object An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   */\n  public getCurrent(filter: LoopBackFilter = {}): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() + \"/Users\" + \"/:id\";\n    let id: any = this.auth.getCurrentUserId();\n    if (id == null)\n    id = '__anonymous__';\n    let _routeParams: any = { id: id };\n    let _urlParams: any = {};\n    let _postBody: any = {};\n    if (filter) _urlParams.filter = filter;\n    return this.request(_method, _url, _routeParams, _urlParams, _postBody);\n  }\n  /**\n   * Get data of the currently logged user that was returned by the last\n   * call to {@link sdk.User#login} or\n   * {@link sdk.User#getCurrent}. Return null when there\n   * is no user logged in or the data of the current user were not fetched\n   * yet.\n   *\n   * @returns object An Account instance.\n   */\n  public getCachedCurrent() {\n    return this.auth.getCurrentUserData();\n  }\n  /**\n   * Get data of the currently logged access tokern that was returned by the last\n   * call to {@link sdk.User#login}\n   *\n   * @returns object An AccessToken instance.\n   */\n  public getCurrentToken(): AccessToken {\n    return this.auth.getToken();\n  }\n  /**\n   * @name sdk.User#isAuthenticated\n   *\n   * @returns {boolean} True if the current user is authenticated (logged in).\n   */\n  public isAuthenticated() {\n    return !(this.getCurrentId() === '' || this.getCurrentId() == null || this.getCurrentId() == 'null');\n  }\n\n  /**\n   * @name sdk.User#getCurrentId\n   *\n   * @returns object Id of the currently logged-in user or null.\n   */\n  public getCurrentId() {\n    return this.auth.getCurrentUserId();\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `User`.\n   */\n  public getModelName() {\n    return \"User\";\n  }\n}\n","/* tslint:disable */\nexport * from './User';\nexport * from './Question';\nexport * from './Answer';\nexport * from './SDKModels';\nexport * from './logger.service';\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { LoopBackConfig } from '../../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module LoggerService\n* @license MIT\n* @description\n* Console Log wrapper that can be disabled in production mode\n**/\n@Injectable()\nexport class LoggerService {\n\n  log(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.log.apply(console, args);\n  }\n\n  info(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.info.apply(console, args);\n  }\n\n  error(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.error.apply(console, args);\n  }\n\n  count(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  group(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  groupEnd() {\n    if (LoopBackConfig.debuggable())\n    console.groupEnd();\n  }\n\n  profile(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  profileEnd() {\n    if (LoopBackConfig.debuggable())\n    console.profileEnd();\n  }\n\n  time(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.time(arg);\n  }\n\n  timeEnd(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.timeEnd(arg);\n  }\n}\n","/* tslint:disable */\nexport * from './core/index';\nexport * from './custom/index';\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nexport interface CookieInterface { [key: string]: any }\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module CookieBrowser\n* @license MIT\n* @description\n* This module handle cookies, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class CookieBrowser {\n  /**\n   * @type {CookieInterface}\n   **/\n  private cookies: CookieInterface = {};\n  /**\n   * @method get\n   * @param {string} key Cookie key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in cookies.\n   **/\n  get(key: string): any {\n    if (!this.cookies[key]) {\n      let cookie = window.document\n                         .cookie.split('; ')\n                         .filter((item: any) => item.split('=')[0] === key).pop();\n      if (!cookie) {\n        return null;\n      }\n\n      this.cookies[key] = this.parse(cookie.split('=').slice(1).join('='));\n    }\n\n    return this.cookies[key];\n  }\n  /**\n   * @method set\n   * @param {string} key Cookie key name\n   * @param {any} value Any value\n   * @param {Date=} expires The date of expiration (Optional)\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in cookies.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    this.cookies[key] = value;\n    let cookie = `${key}=${value}; path=/${expires ? `; expires=${ expires.toUTCString() }` : ''}`;\n    window.document.cookie = cookie;\n  }\n  /**\n   * @method remove\n   * @param {string} key Cookie key name\n   * @return {void}\n   * @description\n   * This method will remove a cookie from the client.\n   **/\n  remove(key: string) {\n    document.cookie = key + '=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n    delete this.cookies[key];\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(value);\n    } catch (e) {\n        return value;\n    }\n  }\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module StorageBrowser\n* @license MIT\n* @description\n* This module handle localStorage, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class StorageBrowser {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in localStorage.\n   **/\n  get(key: string): any {\n    let data: string = localStorage.getItem(key);\n    return this.parse(data);\n  }\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    localStorage.setItem(\n      key,\n      typeof value === 'object' ? JSON.stringify(value) : value\n    );\n  }\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {\n    if (localStorage[key]) {\n      localStorage.removeItem(key);\n    } else {\n      console.log('Trying to remove unexisting key: ', key);\n    }\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(value);\n    } catch (e) {\n        return value;\n    }\n  }\n}\n","/* tslint:disable */\n/**\n * @module Storage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n **/\nexport class BaseStorage {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in storage.\n   **/\n  get(key: string): any {}\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {}\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {}\n}\n/**\n * @module InternalStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n * This is mainly required because Angular Universal integration.\n * It does inject a CookieStorage instead of LocalStorage.\n **/\nexport class InternalStorage extends BaseStorage {}\n/**\n * @module SDKStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The SDKStorage class is used for dependency injection swapping.\n * It will be provided using factory method according the right environment.\n * This is created for public usage, to allow persisting custom data\n * Into the local storage API.\n **/\nexport class SDKStorage extends BaseStorage {}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CategoriesComponent } from './categories/categories.component';\nimport { CategoriesResolver } from './categories/categories.resolver';\n\nimport { CategoryQuestionsComponent } from './category-questions/category-questions.component';\nimport { CategoryQuestionsResolver } from './category-questions/category-questions.resolver';\n\nimport { QuestionAnswersResolver } from './question-answers/question-answers.resolver';\nimport { QuestionAnswersComponent } from './question-answers/question-answers.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CategoriesComponent,\n    resolve: {\n      data: CategoriesResolver\n    }\n  },\n  {\n    path: 'questions/about/:categorySlug',\n    component: CategoryQuestionsComponent,\n    resolve: {\n      data: CategoryQuestionsResolver\n    }\n  },\n  {\n    path: 'question/:questionSlug',\n    component: QuestionAnswersComponent,\n    resolve: {\n      data: QuestionAnswersResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<main>\\n\\t<mat-toolbar color=\\\"primary\\\" class=\\\"top-toolbar\\\">\\n  \\t<breadcrumb></breadcrumb>\\n\\t</mat-toolbar>\\n\\t<router-outlet></router-outlet>\\n</main>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'learn-angular-from-scratch';\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { CategoriesComponent } from './categories/categories.component';\nimport { CategoriesResolver } from './categories/categories.resolver';\nimport { CategoriesService } from './services/categories.service';\n\nimport { CategoryQuestionsResolver } from './category-questions/category-questions.resolver';\nimport { CategoryQuestionsComponent } from './category-questions/category-questions.component';\nimport { NewQuestionModalComponent } from './category-questions/new-question/new-question-modal.component';\nimport { DeleteQuestionModalComponent } from './category-questions/delete-question/delete-question-modal.component';\nimport { QuestionsService } from './services/questions.service';\n\nimport { NewAnswerModalComponent } from './question-answers/new-answer/new-answer-modal.component';\nimport { UpdateAnswerModalComponent } from './question-answers/update-answer/update-answer-modal.component';\nimport { DeleteAnswerModalComponent } from './question-answers/delete-answer/delete-answer-modal.component';\nimport { QuestionAnswersComponent } from './question-answers/question-answers.component';\nimport { QuestionAnswersResolver } from './question-answers/question-answers.resolver';\nimport { AnswersService } from './services/answers.service';\n\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CategoriesComponent,\n    CategoryQuestionsComponent,\n    NewQuestionModalComponent,\n    NewAnswerModalComponent,\n    UpdateAnswerModalComponent,\n    QuestionAnswersComponent,\n    DeleteQuestionModalComponent,\n    DeleteAnswerModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SharedModule\n  ],\n  entryComponents: [\n    DeleteQuestionModalComponent,\n    DeleteAnswerModalComponent,\n    NewQuestionModalComponent,\n    NewAnswerModalComponent,\n    UpdateAnswerModalComponent\n  ],\n  providers: [\n    CategoriesService,\n    QuestionsService,\n    AnswersService,\n    CategoryQuestionsResolver,\n    CategoriesResolver,\n    QuestionAnswersResolver\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"col-lg-12 categories\\\">\\n  <div class=\\\"card col-md-offset-2 col-md-8 \\\">\\n    <h3 class=\\\"list-title\\\">Learn all about Angular</h3>\\n    <mat-list class=\\\"list\\\">\\n      <mat-list-item class=\\\"list-item\\\" *ngFor=\\\"let category of categories\\\">\\n        <img matListAvatar class=\\\"avatar\\\" [src]=\\\"category.image\\\">\\n        <h3 matLine class=\\\"list-line\\\">\\n          <a [routerLink]=\\\"['/questions/about', category.slug]\\\">{{category.title}}</a>\\n        </h3>\\n        <h3 matLine class=\\\"list-line\\\">{{category.description}}</h3>\\n        <div matLine class=\\\"list-line\\\">\\n          <mat-chip-list>\\n            <mat-chip *ngFor=\\\"let tag of category.tags\\\">{{tag.name}}</mat-chip>\\n          </mat-chip-list>\\n        </div>\\n      </mat-list-item>\\n    </mat-list>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CategoryModel } from \"./category.model\";\n\n@Component({\n  selector: 'categories',\n  styleUrls: ['./categories.scss'],\n  templateUrl: './categories.component.html'\n})\n\nexport class CategoriesComponent implements OnInit{\n\n  categories: CategoryModel[];\n\n  constructor(private route: ActivatedRoute){}\n\n  ngOnInit(): void {\n    this.route.data.subscribe(routeData => {\n      let data = routeData['data'];\n      if (data) {\n        this.categories = data.categories;\n      }\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from \"@angular/router\";\nimport { CategoriesService } from \"../services/categories.service\";\n\n@Injectable()\nexport class CategoriesResolver implements Resolve<any> {\n\n  constructor(\n    private categoriesService: CategoriesService\n  ) { }\n\n  resolve() {\n    return new Promise((resolve, reject) => {\n\n      let breadcrumbs = [\n        { url: '/', label: 'Categories' }\n      ];\n\n      //get categories from local json file\n      this.categoriesService.getCategories()\n      .then(\n        categories => {\n          return resolve({\n            categories: categories,\n            breadcrumbs: breadcrumbs\n          });\n        },\n        err => {\n          return resolve(null);\n        }\n      )\n    });\n  }\n}\n","module.exports = \".categories .list {\\n  margin-top: 30px;\\n}\\n.categories .list-item {\\n  height: 120px;\\n}\\n.categories .list-item .avatar {\\n  width: 100px;\\n  height: 100px;\\n}\\n.categories .list-item:not(:first-child) {\\n  border-top: 1px solid #e1e1e1;\\n}\\n.categories .list-item .list-line {\\n  margin-bottom: 8px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9hcHAvc3JjL2FwcC9jYXRlZ29yaWVzL2NhdGVnb3JpZXMuc2NzcyIsInNyYy9hcHAvY2F0ZWdvcmllcy9jYXRlZ29yaWVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUU7RUFDRSxnQkFBQTtBQ0hKO0FETUU7RUFDRSxhQUFBO0FDSko7QURNSTtFQUNFLFlBQUE7RUFDQSxhQUFBO0FDSk47QURPSTtFQUNFLDZCQUFBO0FDTE47QURPSTtFQUNFLGtCQUFBO0FDTE4iLCJmaWxlIjoic3JjL2FwcC9jYXRlZ29yaWVzL2NhdGVnb3JpZXMuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJy4uL3N0eWxlcy9fdmFyaWFibGVzJztcblxuLmNhdGVnb3JpZXMge1xuXG4gIC5saXN0IHtcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xuICB9XG5cbiAgLmxpc3QtaXRlbSB7XG4gICAgaGVpZ2h0OiAxMjBweDtcblxuICAgIC5hdmF0YXIge1xuICAgICAgd2lkdGg6IDEwMHB4O1xuICAgICAgaGVpZ2h0OiAxMDBweDtcbiAgICB9XG5cbiAgICAmOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAkZ3JleTQ7XG4gICAgfVxuICAgIC5saXN0LWxpbmUge1xuICAgICAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICAgIH1cbiAgfVxufVxuIiwiLmNhdGVnb3JpZXMgLmxpc3Qge1xuICBtYXJnaW4tdG9wOiAzMHB4O1xufVxuLmNhdGVnb3JpZXMgLmxpc3QtaXRlbSB7XG4gIGhlaWdodDogMTIwcHg7XG59XG4uY2F0ZWdvcmllcyAubGlzdC1pdGVtIC5hdmF0YXIge1xuICB3aWR0aDogMTAwcHg7XG4gIGhlaWdodDogMTAwcHg7XG59XG4uY2F0ZWdvcmllcyAubGlzdC1pdGVtOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMWUxZTE7XG59XG4uY2F0ZWdvcmllcyAubGlzdC1pdGVtIC5saXN0LWxpbmUge1xuICBtYXJnaW4tYm90dG9tOiA4cHg7XG59Il19 */\"","module.exports = \"<div class=\\\"col-lg-12 category-questions\\\">\\n  <div class=\\\"card col-md-offset-2 col-md-8 \\\">\\n    <h3 class=\\\"list-title\\\">Learn about: {{categoryTitle}}</h3>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openNewQuestionModal(categorySlug)\\\">New Question</button>\\n    <mat-list class=\\\"list\\\">\\n      <mat-list-item class=\\\"list-item\\\" *ngFor=\\\"let question of questions\\\">\\n        <h3 matLine>\\n          <a [routerLink]=\\\"['/question/', question.questionSlug]\\\">{{question.question}}</a>\\n        </h3>\\n        <p matLine class=\\\"icons-line\\\">\\n          <i class=\\\"list-single-icon fa fa-thumbs-o-up\\\" (click)=\\\"addPositiveVote(question)\\\" aria-hidden=\\\"true\\\"></i>\\n          <span class=\\\"list-single-icon-number\\\">{{question.positiveVotes}}</span>\\n          <i class=\\\"list-single-icon fa fa-thumbs-o-down\\\" (click)=\\\"addNegativeVote(question)\\\"></i>\\n          <span class=\\\"list-single-icon-number\\\">{{question.negativeVotes}}</span>\\n          <i class=\\\"list-single-icon fa fa fa-trash-o\\\" (click)=\\\"delete(question.id)\\\"></i>\\n          <span class=\\\"list-single-icon-number\\\"></span>\\n          <span class=\\\"list-single-icon-number\\\">{{question.answers? question.answers.length: 0}} Answers</span>\\n        </p>\\n      </mat-list-item>\\n    </mat-list>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuestionsService } from '../services/questions.service';\nimport { AnswersService } from '../services/answers.service';\nimport { Question } from '../../../sdk/models/Question';\nimport { MatDialog } from '@angular/material';\nimport { DeleteQuestionModalComponent } from './delete-question/delete-question-modal.component';\nimport { NewQuestionModalComponent } from './new-question/new-question-modal.component';\n\n@Component({\n  selector: 'category-questions',\n  styleUrls: ['./category-questions.scss'],\n  templateUrl: './category-questions.component.html'\n})\n\nexport class CategoryQuestionsComponent implements OnInit{\n\n  questions: Array<Question>;\n  categoryTitle: string;\n  categorySlug: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    public questionsService: QuestionsService,\n    public answersService: AnswersService,\n    public dialog: MatDialog\n  ){}\n\n  ngOnInit(): void {\n    this.route.data.subscribe(routeData => {\n      let data = routeData['data'];\n      if (data) {\n        this.questions = data.questions;\n        this.categoryTitle = data.category_title;\n        this.categorySlug = data.category_slug;\n      }\n    })\n  }\n\n  getQuestions(){\n    this.questionsService.getQuestionsByCategory(this.categorySlug)\n    .then(questions => this.questions = questions);\n  }\n\n  openNewQuestionModal(categorySlug){\n    let dialogRef = this.dialog.open(NewQuestionModalComponent, {\n      data: { categorySlug: categorySlug }\n    });\n\n    dialogRef.afterClosed().subscribe(question => {\n      if(question){\n        this.addQuestionToList(question);\n      }\n    })\n  }\n\n  delete(questionId){\n    let dialogRef = this.dialog.open(DeleteQuestionModalComponent, {\n      data: { questionId: questionId }\n    });\n\n    dialogRef.afterClosed().subscribe(confirm => {\n      if(confirm){\n        // refresh the questions list\n        var index = this.questions.findIndex((question) => question.id === questionId);\n        this.questions.splice(index, 1);\n\n        // TODO: evaluar cambiar esto por un operation method en loopback.\n        this.answersService.getAnswers(questionId)\n        .then(answers => {\n          for(let answer of answers){\n            this.answersService.deleteAnswer(answer.id);\n          }\n        })\n      }\n    });\n  }\n\n  addQuestionToList(question){\n    this.questions.push(question);\n  }\n\n  addPositiveVote(question){\n    question.positiveVotes += 1;\n    this.questionsService.updateQuestion(question);\n  }\n\n  addNegativeVote(question){\n    question.negativeVotes += 1;\n    this.questionsService.updateQuestion(question);\n  }\n\n}\n","import { forkJoin as observableForkJoin } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from \"@angular/router\";\nimport { QuestionsService } from '../services/questions.service';\nimport { CategoriesService } from '../services/categories.service';\n\n@Injectable()\nexport class CategoryQuestionsResolver implements Resolve<any> {\n\n  constructor(\n    private questionsService: QuestionsService,\n    private categoriesService: CategoriesService\n   ) { }\n\n  resolve(route: ActivatedRouteSnapshot) {\n\n    return new Promise((resolve, reject) => {\n      //get current category slug form url\n      let category_slug = route.paramMap.get('categorySlug');\n\n\n      observableForkJoin(\n        this.categoriesService.getCategoryBySlug(category_slug),\n        this.questionsService.getQuestionsByCategory(category_slug)\n      ).subscribe(\n        data => {\n          let breadcrumbs = [\n            { url: '/', label: 'Categories' },\n            { url: 'questions/about/' + category_slug, label: data[0].title }\n          ];\n\n          return resolve({\n            questions: data[1],\n            category_title: data[0].title,\n            category_slug: category_slug,\n            breadcrumbs: breadcrumbs\n          });\n        },\n        err => {\n          console.log(err)\n          return resolve(null)\n        });\n    })\n  }\n}\n","module.exports = \".category-questions .list {\\n  margin-top: 30px;\\n}\\n.category-questions .list-item {\\n  margin-bottom: 10px;\\n}\\n.category-questions .list-item:not(:first-child) {\\n  border-top: 1px solid #e1e1e1;\\n}\\n.category-questions .list-item .icons-line {\\n  margin-top: 10px;\\n}\\n.category-questions .list-item .icons-line .list-single-icon {\\n  color: #555;\\n  font-size: 20px;\\n}\\n.category-questions .list-item .icons-line .list-single-icon-number {\\n  color: #555;\\n  vertical-align: top;\\n}\\n.category-questions .list-item .icons-line .list-single-icon-number:not(:last-child) {\\n  margin-right: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9hcHAvc3JjL2FwcC9jYXRlZ29yeS1xdWVzdGlvbnMvY2F0ZWdvcnktcXVlc3Rpb25zLnNjc3MiLCJzcmMvYXBwL2NhdGVnb3J5LXF1ZXN0aW9ucy9jYXRlZ29yeS1xdWVzdGlvbnMuc2NzcyIsIi9hcHAvc3JjL2FwcC9zdHlsZXMvX3ZhcmlhYmxlcy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdFO0VBQ0UsZ0JBQUE7QUNGSjtBRElFO0VBQ0UsbUJBQUE7QUNGSjtBREdJO0VBQ0UsNkJBQUE7QUNETjtBRElJO0VBQ0UsZ0JBQUE7QUNGTjtBREdNO0VBQ0UsV0VYQTtFRllBLGVBQUE7QUNEUjtBREdNO0VBQ0UsV0VmQTtFRmdCQSxtQkFBQTtBQ0RSO0FER1E7RUFDRSxrQkFBQTtBQ0RWIiwiZmlsZSI6InNyYy9hcHAvY2F0ZWdvcnktcXVlc3Rpb25zL2NhdGVnb3J5LXF1ZXN0aW9ucy5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi4vc3R5bGVzL192YXJpYWJsZXMnO1xuXG4uY2F0ZWdvcnktcXVlc3Rpb25zIHtcbiAgLmxpc3Qge1xuICAgIG1hcmdpbi10b3A6IDMwcHg7XG4gIH1cbiAgLmxpc3QtaXRlbSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICAmOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAkZ3JleTQ7XG4gICAgfVxuXG4gICAgLmljb25zLWxpbmUge1xuICAgICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICAgIC5saXN0LXNpbmdsZS1pY29uIHtcbiAgICAgICAgY29sb3I6ICRncmV5NTtcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgfVxuICAgICAgLmxpc3Qtc2luZ2xlLWljb24tbnVtYmVyIHtcbiAgICAgICAgY29sb3I6ICRncmV5NTtcbiAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcblxuICAgICAgICAmOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgICAgICAgIG1hcmdpbi1yaWdodDogMTVweDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLmNhdGVnb3J5LXF1ZXN0aW9ucyAubGlzdCB7XG4gIG1hcmdpbi10b3A6IDMwcHg7XG59XG4uY2F0ZWdvcnktcXVlc3Rpb25zIC5saXN0LWl0ZW0ge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuLmNhdGVnb3J5LXF1ZXN0aW9ucyAubGlzdC1pdGVtOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMWUxZTE7XG59XG4uY2F0ZWdvcnktcXVlc3Rpb25zIC5saXN0LWl0ZW0gLmljb25zLWxpbmUge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuLmNhdGVnb3J5LXF1ZXN0aW9ucyAubGlzdC1pdGVtIC5pY29ucy1saW5lIC5saXN0LXNpbmdsZS1pY29uIHtcbiAgY29sb3I6ICM1NTU7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cbi5jYXRlZ29yeS1xdWVzdGlvbnMgLmxpc3QtaXRlbSAuaWNvbnMtbGluZSAubGlzdC1zaW5nbGUtaWNvbi1udW1iZXIge1xuICBjb2xvcjogIzU1NTtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cbi5jYXRlZ29yeS1xdWVzdGlvbnMgLmxpc3QtaXRlbSAuaWNvbnMtbGluZSAubGlzdC1zaW5nbGUtaWNvbi1udW1iZXI6bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1yaWdodDogMTVweDtcbn0iLCIvLyBDb2xvcnNcbiRwcmltYXJ5OiAjM2Y1MWI1O1xuJGdyZXk4OiAjNGE0YTRhO1xuJGdyZXk0OiAjZTFlMWUxO1xuJGdyZXk1OiAjNTU1O1xuIl19 */\"","module.exports = \"<div class=\\\"alert-modal\\\">\\n  <h3 class=\\\"alert-modal-title\\\">DELETE QUESTION</h3>\\n  <span class=\\\"alert-modal-text\\\">Are you sure to delete this question?</span>\\n  <div>\\n    <div class=\\\"alert-modal-buttons\\\">\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"alert-modal-button alert-modal-button-success\\\" (click)=\\\"onCloseConfirm()\\\">Yes</button>\\n      <button mat-raised-button class=\\\"alert-modal-button alert-modal-button-failure\\\" (click)=\\\"onCloseCancel()\\\">No</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { QuestionsService } from '../../services/questions.service';\n\n@Component({\n  selector: 'delete-question-modal',\n  templateUrl: 'delete-question-modal.component.html',\n  styleUrls: ['../../styles/modals.scss']\n})\n\nexport class DeleteQuestionModalComponent {\n  constructor(\n    public thisDialogRef: MatDialogRef<DeleteQuestionModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public modalData: any,\n    public questionsService: QuestionsService\n  ){}\n\n  onCloseConfirm() {\n    this.questionsService.deleteQuestion(this.modalData.questionId)\n    .then(res => {\n      this.thisDialogRef.close(true);\n    })\n  }\n\n  onCloseCancel() {\n    this.thisDialogRef.close(false);\n  }\n\n}\n","module.exports = \"<div class=\\\"alert-modal\\\">\\n  <h3 class=\\\"alert-modal-title\\\">NEW QUESTION</h3>\\n  <div>\\n    <form [formGroup]=\\\"questionForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit(questionForm.value)\\\">\\n      <textarea rows=3 class=\\\"form-control form-input\\\" type=\\\"text\\\" formControlName=\\\"question\\\"></textarea>\\n      <div class=\\\"alert-modal-buttons\\\">\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"alert-modal-button alert-modal-button-success\\\" type=\\\"submit\\\" [disabled]=\\\"!questionForm.valid\\\">Ask</button>\\n        <button mat-raised-button class=\\\"alert-modal-button alert-modal-button-failure\\\" type=\\\"button\\\"(click)=\\\"onCloseCancel()\\\">Cancel</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Inject} from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Validators, FormGroup, FormControl} from '@angular/forms';\nimport { QuestionsService } from '../../services/questions.service';\nimport { SlugifyPipe } from '../../shared/slugify.pipe';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'new-question-modal',\n  templateUrl: './new-question-modal.component.html',\n  exportAs: 'newQuestionModal',\n  styleUrls: ['../../styles/modals.scss']\n})\n\nexport class NewQuestionModalComponent implements OnInit{\n\n  questionForm: FormGroup;\n\n  constructor(\n    public questionsService: QuestionsService,\n    private slugifyPipe: SlugifyPipe,\n    public thisDialogRef: MatDialogRef<NewQuestionModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public modalData: any,\n  ){}\n\n  ngOnInit(): void {\n    this.questionForm = new FormGroup({\n      question: new FormControl('', Validators.required)\n    })\n  }\n\n  onCloseCancel() {\n    this.thisDialogRef.close();\n  }\n\n  onSubmit(values){\n    let data: any = {};\n    data.question = values.question;\n    data.questionSlug = this.slugifyPipe.transform(values.question);\n    data.categorySlug = this.modalData.categorySlug;\n\n    //create new question\n    this.questionsService.createQuestion(data)\n    .then(question => {\n      this.thisDialogRef.close(question);\n      this.questionForm.reset();\n    });\n  }\n\n\n}\n","module.exports = \"<div class=\\\"alert-modal\\\">\\n  <h3 class=\\\"alert-modal-title\\\">DELETE ANSWER</h3>\\n  <span class=\\\"alert-modal-text\\\">Are you sure to delete this answer?</span>\\n  <div>\\n    <div class=\\\"alert-modal-buttons\\\">\\n      <button mat-raised-button color=\\\"primary\\\"class=\\\"btn alert-modal-button alert-modal-button-success\\\" (click)=\\\"onCloseConfirm()\\\">Yes</button>\\n      <button mat-raised-button class=\\\"alert-modal-button alert-modal-button-failure\\\" (click)=\\\"onCloseCancel()\\\">No</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { AnswersService } from '../../services/answers.service';\n\n@Component({\n  selector: 'delete-answer-modal',\n  templateUrl: 'delete-answer-modal.component.html',\n  styleUrls: ['../../styles/modals.scss']\n})\nexport class DeleteAnswerModalComponent {\n\n  constructor(\n    public thisDialogRef: MatDialogRef<DeleteAnswerModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public modalData: any,\n    public answersService: AnswersService\n  ){}\n\n  onCloseConfirm() {\n    this.answersService.deleteAnswer(this.modalData.answerId)\n    .then(\n      res => {\n        this.thisDialogRef.close(true);\n      })\n  }\n\n  onCloseCancel() {\n    this.thisDialogRef.close(false);\n  }\n\n}\n","module.exports = \"<div class=\\\"alert-modal\\\">\\n  <h3 class=\\\"alert-modal-title\\\">NEW ANSWER</h3>\\n  <!-- <span class=\\\"alert-modal-text\\\">Write your answer here:</span> -->\\n  <div>\\n    <form [formGroup]=\\\"answerForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit(answerForm.value)\\\">\\n      <textarea rows=3 class=\\\"form-control form-input\\\" type=\\\"text\\\" formControlName=\\\"answer\\\"></textarea>\\n      <div class=\\\"alert-modal-buttons\\\">\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"alert-modal-button alert-modal-button-success\\\" type=\\\"submit\\\" [disabled]=\\\"!answerForm.valid\\\">Answer</button>\\n        <button mat-raised-button class=\\\"alert-modal-button alert-modal-button-failure\\\" type=\\\"button\\\"(click)=\\\"onCloseCancel()\\\">Cancel</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Validators, FormGroup, FormControl} from '@angular/forms';\nimport { AnswersService } from '../../services/answers.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'new-answer',\n  templateUrl: './new-answer-modal.component.html',\n  exportAs: 'newAnswerModal',\n  styleUrls: ['../../styles/modals.scss']\n})\n\nexport class NewAnswerModalComponent implements OnInit{\n\n  answerForm: FormGroup;\n\n  constructor(\n    public answersService: AnswersService,\n    public thisDialogRef: MatDialogRef<NewAnswerModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public modalData: any,\n  ){}\n\n  ngOnInit(): void {\n    this.answerForm = new FormGroup({\n      answer: new FormControl('', Validators.required)\n    })\n  }\n\n  onCloseCancel() {\n    this.thisDialogRef.close();\n  }\n\n  onSubmit(values){\n    let data : any = {};\n    data.answer = values.answer;\n    data.questionId = this.modalData.questionId;\n    this.answersService.createAnswer(data)\n    .then(answer => {\n      this.thisDialogRef.close(answer);\n      this.answerForm.reset();\n    })\n  }\n\n}\n","module.exports = \"<div class=\\\"col-lg-12 question-answers\\\">\\n  <div class=\\\"card col-md-offset-2 col-md-8 \\\">\\n    <h3 class=\\\"list-title\\\">{{question.question}}</h3>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openNewAnswerModal(question.id)\\\">New Answer</button>\\n    <mat-list class=\\\"list\\\">\\n      <mat-list-item class=\\\"list-item\\\" *ngFor=\\\"let answer of question.answers\\\">\\n        <span matLine class=\\\"answer\\\"> {{answer.answer}} </span>\\n        <p matLine class=\\\"icons-line\\\">\\n          <i class=\\\"list-single-icon fa fa-thumbs-o-up\\\" (click)=\\\"addPositiveVote(answer)\\\" aria-hidden=\\\"true\\\"></i>\\n          <span class=\\\"list-single-icon-number\\\">{{answer.positiveVotes}}</span>\\n          <i class=\\\"list-single-icon fa fa-thumbs-o-down\\\" (click)=\\\"addNegativeVote(answer)\\\"></i>\\n          <span class=\\\"list-single-icon-number\\\">{{answer.negativeVotes}}</span>\\n          <i class=\\\"list-single-icon fa fa fa-trash-o\\\" (click)=\\\"delete(answer.id)\\\"></i>\\n          <span class=\\\"list-single-icon-number\\\"></span>\\n          <i class=\\\"list-single-icon fa fa-pencil\\\" (click)=\\\"openUpdateAnswerModal(answer)\\\"></i>\\n          <span class=\\\"list-single-icon-number\\\"></span>\\n        </p>\\n      </mat-list-item>\\n    </mat-list>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AnswersService } from '../services/answers.service'\nimport { Question } from '../../../sdk/models/Question';\nimport { MatDialog } from '@angular/material';\nimport { DeleteAnswerModalComponent } from './delete-answer/delete-answer-modal.component';\nimport { NewAnswerModalComponent } from './new-answer/new-answer-modal.component';\nimport { UpdateAnswerModalComponent } from './update-answer/update-answer-modal.component';\n\n@Component({\n  selector: 'answer',\n  styleUrls: ['./question-answers.scss'],\n  templateUrl: './question-answers.component.html'\n})\n\nexport class QuestionAnswersComponent {\n\n  question: Question;\n\n  constructor(\n    private answersService: AnswersService,\n    private route: ActivatedRoute,\n    public dialog: MatDialog\n  ){}\n\n  ngOnInit(): void {\n    this.route.data.subscribe(routeData => {\n      let data = routeData['data'];\n      if (data) {\n        this.question = data.question;\n      }\n    })\n  }\n\n  openNewAnswerModal(questionId){\n    let dialogRef = this.dialog.open(NewAnswerModalComponent, {\n      data: { questionId: questionId }\n    });\n\n    dialogRef.afterClosed().subscribe(answer => {\n      if(answer){\n        this.addAnswerToList(answer);\n      }\n    })\n  }\n\n  openUpdateAnswerModal(answer){\n    let dialogRef = this.dialog.open(UpdateAnswerModalComponent, {\n      data: { answer: answer }\n    });\n\n  }\n\n  delete(answerId){\n    let dialogRef = this.dialog.open(DeleteAnswerModalComponent, {\n      data: { answerId: answerId }\n    });\n\n    dialogRef.afterClosed().subscribe(confirm => {\n      if(confirm){\n        var index = this.question.answers.findIndex((answer) => answer.id === answerId);\n        this.question.answers.splice(index, 1);\n      }\n    })\n\n  }\n\n  addPositiveVote(answer){\n    answer.positiveVotes += 1;\n    this.answersService.updateAnswer(answer);\n  }\n\n  addNegativeVote(answer){\n    answer.negativeVotes += 1;\n    this.answersService.updateAnswer(answer);\n  }\n\n  addAnswerToList(answer){\n    this.question.answers.push(answer);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from \"@angular/router\";\nimport { QuestionsService } from '../services/questions.service';\n\n@Injectable()\nexport class QuestionAnswersResolver implements Resolve<any> {\n\n  constructor(\n    private questionsService: QuestionsService\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot) {\n    let questionSlug = route.paramMap.get('questionSlug');\n\n    return new Promise((resolve, reject) => {\n      this.questionsService.getQuestionBySlug(questionSlug)\n      .then(question => {\n        let breadcrumbs = [\n          { url: '/', label: 'Categories' },\n          { url: 'questions/about/' + question.categorySlug, label: question.categorySlug },\n          { url: 'question/' + questionSlug, label: question.question }\n        ];\n\n        return resolve({\n          question: question,\n          breadcrumbs: breadcrumbs\n        });\n      },\n      err => {\n        console.log(err);\n        return resolve(null);\n      })\n    });\n  }\n}\n","module.exports = \".question-answers .list-item {\\n  margin: 20px 0px;\\n}\\n.question-answers .list-item:not(:first-child) {\\n  border-top: 1px solid #e1e1e1;\\n}\\n.question-answers .list-item .answer {\\n  white-space: normal;\\n}\\n.question-answers .list-item .icons-line {\\n  margin-top: 10px;\\n}\\n.question-answers .list-item .icons-line .list-single-icon {\\n  color: #555;\\n  font-size: 20px;\\n}\\n.question-answers .list-item .icons-line .list-single-icon-number {\\n  color: #555;\\n  vertical-align: top;\\n}\\n.question-answers .list-item .icons-line .list-single-icon-number:not(:last-child) {\\n  margin-right: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9hcHAvc3JjL2FwcC9xdWVzdGlvbi1hbnN3ZXJzL3F1ZXN0aW9uLWFuc3dlcnMuc2NzcyIsInNyYy9hcHAvcXVlc3Rpb24tYW5zd2Vycy9xdWVzdGlvbi1hbnN3ZXJzLnNjc3MiLCIvYXBwL3NyYy9hcHAvc3R5bGVzL192YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJRTtFQUNFLGdCQUFBO0FDSEo7QURLSTtFQUNFLDZCQUFBO0FDSE47QURNSTtFQUNFLG1CQUFBO0FDSk47QURPSTtFQUNFLGdCQUFBO0FDTE47QURNTTtFQUNFLFdFZEE7RUZlQSxlQUFBO0FDSlI7QURNTTtFQUNFLFdFbEJBO0VGbUJBLG1CQUFBO0FDSlI7QURNUTtFQUNFLGtCQUFBO0FDSlYiLCJmaWxlIjoic3JjL2FwcC9xdWVzdGlvbi1hbnN3ZXJzL3F1ZXN0aW9uLWFuc3dlcnMuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJy4uL3N0eWxlcy9fdmFyaWFibGVzJztcblxuLnF1ZXN0aW9uLWFuc3dlcnMge1xuXG4gIC5saXN0LWl0ZW0ge1xuICAgIG1hcmdpbjogMjBweCAwcHg7XG5cbiAgICAmOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAkZ3JleTQ7XG4gICAgfVxuXG4gICAgLmFuc3dlciB7XG4gICAgICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAgIH1cblxuICAgIC5pY29ucy1saW5lIHtcbiAgICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgICAubGlzdC1zaW5nbGUtaWNvbiB7XG4gICAgICAgIGNvbG9yOiAkZ3JleTU7XG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgIH1cbiAgICAgIC5saXN0LXNpbmdsZS1pY29uLW51bWJlciB7XG4gICAgICAgIGNvbG9yOiAkZ3JleTU7XG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG5cbiAgICAgICAgJjpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi5xdWVzdGlvbi1hbnN3ZXJzIC5saXN0LWl0ZW0ge1xuICBtYXJnaW46IDIwcHggMHB4O1xufVxuLnF1ZXN0aW9uLWFuc3dlcnMgLmxpc3QtaXRlbTpub3QoOmZpcnN0LWNoaWxkKSB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTFlMWUxO1xufVxuLnF1ZXN0aW9uLWFuc3dlcnMgLmxpc3QtaXRlbSAuYW5zd2VyIHtcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbn1cbi5xdWVzdGlvbi1hbnN3ZXJzIC5saXN0LWl0ZW0gLmljb25zLWxpbmUge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuLnF1ZXN0aW9uLWFuc3dlcnMgLmxpc3QtaXRlbSAuaWNvbnMtbGluZSAubGlzdC1zaW5nbGUtaWNvbiB7XG4gIGNvbG9yOiAjNTU1O1xuICBmb250LXNpemU6IDIwcHg7XG59XG4ucXVlc3Rpb24tYW5zd2VycyAubGlzdC1pdGVtIC5pY29ucy1saW5lIC5saXN0LXNpbmdsZS1pY29uLW51bWJlciB7XG4gIGNvbG9yOiAjNTU1O1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xufVxuLnF1ZXN0aW9uLWFuc3dlcnMgLmxpc3QtaXRlbSAuaWNvbnMtbGluZSAubGlzdC1zaW5nbGUtaWNvbi1udW1iZXI6bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1yaWdodDogMTVweDtcbn0iLCIvLyBDb2xvcnNcbiRwcmltYXJ5OiAjM2Y1MWI1O1xuJGdyZXk4OiAjNGE0YTRhO1xuJGdyZXk0OiAjZTFlMWUxO1xuJGdyZXk1OiAjNTU1O1xuIl19 */\"","module.exports = \"<div class=\\\"alert-modal\\\">\\n  <h3 class=\\\"alert-modal-title\\\">UPDATE ANSWER</h3>\\n  <div>\\n    <form [formGroup]=\\\"answerForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit(answerForm.value)\\\">\\n      <textarea rows=3 class=\\\"form-control form-input\\\" type=\\\"text\\\" formControlName=\\\"answer\\\"></textarea>\\n      <div class=\\\"alert-modal-buttons\\\">\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"alert-modal-button alert-modal-button-success\\\" type=\\\"submit\\\" [disabled]=\\\"!answerForm.valid\\\">Edit</button>\\n        <button mat-raised-button class=\\\"alert-modal-button alert-modal-button-failure\\\" type=\\\"button\\\"(click)=\\\"onCloseCancel()\\\">Cancel</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Validators, FormGroup, FormControl} from '@angular/forms';\nimport { AnswersService } from '../../services/answers.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'update-answer-modal',\n  templateUrl: './update-answer-modal.component.html',\n  exportAs: 'updateAnswerModal',\n  styleUrls: ['../../styles/modals.scss']\n})\n\nexport class UpdateAnswerModalComponent implements OnInit{\n\n  answerForm: FormGroup;\n\n  constructor(\n    public answersService: AnswersService,\n    public thisDialogRef: MatDialogRef<UpdateAnswerModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public modalData: any\n  ){\n  }\n\n  ngOnInit(): void {\n    console.log(this.modalData.answer);\n    this.answerForm = new FormGroup({\n      answer: new FormControl(this.modalData.answer.answer, Validators.required)\n    })\n  }\n\n  onCloseCancel() {\n    this.thisDialogRef.close();\n  }\n\n  onSubmit(values){\n    let newAnswer = this.modalData.answer;\n    newAnswer.answer = values.answer;\n    this.answersService.updateAnswer(newAnswer)\n    .then(answer => {\n      this.thisDialogRef.close(answer);\n      this.answerForm.reset();\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AnswerApi, Answer } from '../../../sdk';\n\n\n@Injectable()\nexport class AnswersService {\n  constructor(\n    private answerApi: AnswerApi\n  ){}\n\n  getAnswers(questionId){\n    let query = {\n     questionId: questionId\n    }\n   return this.answerApi.find<Answer>({where: query})\n   .toPromise()\n  }\n\n  getAnswer(anserId){\n    let query = {\n      id: anserId\n    }\n    return this.answerApi.find<Answer>({where: query})\n    .toPromise()\n  }\n\n  deleteAnswer(answerId){\n    return this.answerApi.deleteById<Answer>(answerId).toPromise();\n  }\n\n  updateAnswer(values){\n    let data = new Answer();\n    data.answer = values.answer;\n    data.positiveVotes = values.positiveVotes;\n    data.negativeVotes = values.negativeVotes;\n    data.questionId = values.questionId;\n    return this.answerApi.updateAttributes<Answer>(values.id, data)\n    .toPromise()\n  }\n\n  createAnswer(values){\n    let data = new Answer();\n    data.answer = values.answer;\n    data.questionId = values.questionId;\n    return this.answerApi.create<Answer>(data)\n    .toPromise()\n  }\n\n  countAnswers(questionId){\n    let query = {\n      questionId: questionId\n    }\n    return this.answerApi.count({where: query})\n    .toPromise()\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { CategoryModel } from \"../categories/category.model\";\n\n@Injectable()\nexport class CategoriesService {\n\n  constructor(private http: Http){}\n\n  getCategories(): Promise<CategoryModel[]> {\n    return this.http.get(\"./assets/categories.json\")\n    .toPromise()\n    .then(res => res.json() as CategoryModel[])\n  }\n\n  getCategoryBySlug(slug: string){\n    return this.getCategories()\n    .then(categories =>{\n      return categories.find((category) => {\n        return category.slug == slug;\n      });\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { QuestionApi, Question, LoopBackFilter } from '../../../sdk';\n\n\n@Injectable()\nexport class QuestionsService {\n  constructor(\n    private questionApi: QuestionApi\n  ){}\n\n  getQuestions(){\n   let filter: LoopBackFilter = {\n     \"include\":{\n       \"relation\": \"answers\"\n     }\n   }\n   return this.questionApi.find<Question>(filter)\n   .toPromise()\n  }\n\n  getQuestion(questionId){\n    let query = {\n      id: questionId\n    }\n    return this.questionApi.find<Question>({where: query})\n    .toPromise()\n  }\n\n  getQuestionsByCategory(category_slug){\n    let filter: LoopBackFilter = {\n      \"include\":{\n        \"relation\": \"answers\"\n      },\n      \"where\": {\n        \"categorySlug\": category_slug\n      }\n    }\n    return this.questionApi.find<Question>(filter)\n    .toPromise()\n  }\n\n  getQuestionBySlug(slug){\n    let filter: LoopBackFilter = {\n      \"include\":{\n        \"relation\": \"answers\"\n      },\n      \"where\": {\n        \"questionSlug\": slug\n      }\n    }\n    return this.questionApi.findOne<Question>(filter)\n    .toPromise()\n  }\n\n  deleteQuestion(questionId){\n    return this.questionApi.deleteById<Question>(questionId).toPromise()\n  }\n\n  updateQuestion(question){\n    return this.questionApi.updateAttributes<Question>(question.id, question).toPromise()\n  }\n\n  createQuestion(values){\n    let data = new Question();\n    data.question = values.question;\n    data.questionSlug = values.questionSlug;\n    data.categorySlug = values.categorySlug;\n\n    return this.questionApi.create<Question>(data).toPromise()\n  }\n\n}\n","module.exports = \"<ol class=\\\"breadcrumb\\\">\\n  <li class=\\\"breadcrumb-item\\\" *ngFor=\\\"let breadcrumb of breadcrumbs; let last = last;\\\">\\n    <a *ngIf=\\\"!last; else lastItem\\\" [routerLink]=\\\"[breadcrumb.url]\\\">{{ breadcrumb.label }}</a>\\n    <ng-template #lastItem>{{ breadcrumb.label }}</ng-template>\\n  </li>\\n</ol>\\n\"","// Inspired on: http://brianflove.com/2016/10/23/angular2-breadcrumb-using-router/\n\n\nimport {switchMap, map, filter} from 'rxjs/operators';\nimport { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd, Params, PRIMARY_OUTLET } from \"@angular/router\";\n \n\ninterface IBreadcrumb {\n  label: string;\n  params: Params;\n  url: string;\n}\n\n@Component({\n  selector: 'breadcrumb',\n  styleUrls: [ './styles/breadcrumb.scss' ],\n  templateUrl: './breadcrumb.component.html',\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class BreadcrumbComponent implements OnInit {\n\n  public breadcrumbs: IBreadcrumb[];\n\tpublic _routerSubscription: any;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n  ) {\n    this.breadcrumbs = [];\n  }\n\n  ngOnInit() {\n    this._routerSubscription = this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd),\n      map(() => this.activatedRoute),\n      map(route => {\n        while (route.firstChild) route = route.firstChild;\n        return route;\n      }),\n      filter(route => route.outlet === 'primary'),\n      switchMap(route => route.data),)\n      .subscribe((event) => {\n        if(event['data'] && event['data'].breadcrumbs){\n          this.breadcrumbs = event['data'].breadcrumbs;\n        }\n        else\n        {\n          // Empty breadcrumbs\n          this.breadcrumbs = [];\n        }\n      });\n  }\n\n\tngOnDestroy(): void {\n    if(this._routerSubscription){\n      this._routerSubscription.unsubscribe();\n    }\n  }\n}\n","module.exports = \"breadcrumb .breadcrumb {\\n  background: transparent;\\n  border-radius: 0;\\n  margin: 20px 0;\\n  padding: 0;\\n}\\nbreadcrumb .breadcrumb .breadcrumb-item {\\n  color: #FFF;\\n  font-size: 15px;\\n  font-weight: 500;\\n  letter-spacing: 1.9px;\\n}\\nbreadcrumb .breadcrumb .breadcrumb-item a {\\n  color: #FFF;\\n  text-decoration: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9hcHAvc3JjL2FwcC9zaGFyZWQvYnJlYWRjcnVtYi9zdHlsZXMvYnJlYWRjcnVtYi5zY3NzIiwic3JjL2FwcC9zaGFyZWQvYnJlYWRjcnVtYi9zdHlsZXMvYnJlYWRjcnVtYi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0UsdUJBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7RUFDQSxVQUFBO0FDQUo7QURFSTtFQUNFLFdBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxxQkFBQTtBQ0FOO0FERU07RUFDRSxXQUFBO0VBQ0EscUJBQUE7QUNBUiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9icmVhZGNydW1iL3N0eWxlcy9icmVhZGNydW1iLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJicmVhZGNydW1iIHtcbiAgLmJyZWFkY3J1bWIge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgbWFyZ2luOiAyMHB4IDA7XG4gICAgcGFkZGluZzogMDtcblxuICAgIC5icmVhZGNydW1iLWl0ZW0ge1xuICAgICAgY29sb3I6ICNGRkY7XG4gICAgICBmb250LXNpemU6IDE1cHg7XG4gICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgbGV0dGVyLXNwYWNpbmc6IDEuOXB4O1xuXG4gICAgICBhIHtcbiAgICAgICAgY29sb3I6ICNGRkY7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsImJyZWFkY3J1bWIgLmJyZWFkY3J1bWIge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgbWFyZ2luOiAyMHB4IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5icmVhZGNydW1iIC5icmVhZGNydW1iIC5icmVhZGNydW1iLWl0ZW0ge1xuICBjb2xvcjogI0ZGRjtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBmb250LXdlaWdodDogNTAwO1xuICBsZXR0ZXItc3BhY2luZzogMS45cHg7XG59XG5icmVhZGNydW1iIC5icmVhZGNydW1iIC5icmVhZGNydW1iLWl0ZW0gYSB7XG4gIGNvbG9yOiAjRkZGO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59Il19 */\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { SDKBrowserModule } from '../../../sdk/index';\nimport { SlugifyPipe } from './slugify.pipe';\n// Material modules\nimport {\n  MatDialogModule,\n  MatToolbarModule,\n  MatListModule,\n  MatButtonModule,\n  MatChipsModule\n} from '@angular/material';\n\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n\n@NgModule({\n  declarations: [\n    BreadcrumbComponent,\n    SlugifyPipe\n  ],\n  imports: [\n    CommonModule,\n    HttpModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    MatDialogModule,\n    MatToolbarModule,\n    MatListModule,\n    MatButtonModule,\n    MatChipsModule,\n    SDKBrowserModule.forRoot(),\n    BrowserAnimationsModule\n  ],\n  providers: [\n    SlugifyPipe\n  ],\n  exports: [\n    BreadcrumbComponent,\n    CommonModule,\n    HttpModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    // Material modules\n    MatDialogModule,\n    MatToolbarModule,\n    MatListModule,\n    MatButtonModule,\n    MatChipsModule\n  ]\n})\nexport class SharedModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'slugify'})\nexport class SlugifyPipe implements PipeTransform {\n  transform(input: string): string {\n    return input.toString().toLowerCase()\n      .replace(/\\s+/g, '-')           // Replace spaces with -\n      .replace(/[^\\w\\-]+/g, '')       // Remove all non-word chars\n      .replace(/\\-\\-+/g, '-')         // Replace multiple - with single -\n      .replace(/^-+/, '')             // Trim - from start of text\n      .replace(/-+$/, '');            // Trim - from end of text\n  }\n}\n","module.exports = \".alert-modal {\\n  min-width: 300px;\\n}\\n.alert-modal .alert-modal-title {\\n  color: #4a4a4a;\\n  font-weight: 300;\\n  text-align: center;\\n}\\n.alert-modal .alert-modal-text {\\n  color: #4a4a4a;\\n  display: block;\\n  text-align: center;\\n}\\n.alert-modal .alert-modal-buttons {\\n  text-align: center;\\n  display: flex;\\n  justify-content: center;\\n}\\n.alert-modal .alert-modal-buttons .alert-modal-button {\\n  margin-bottom: 10px;\\n  margin-top: 40px;\\n  min-width: 60px;\\n  font-weight: 400;\\n  width: 60%;\\n}\\n.alert-modal .alert-modal-buttons .alert-modal-button.alert-modal-button-success {\\n  margin-right: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9hcHAvc3JjL2FwcC9zdHlsZXMvbW9kYWxzLnNjc3MiLCJzcmMvYXBwL3N0eWxlcy9tb2RhbHMuc2NzcyIsIi9hcHAvc3JjL2FwcC9zdHlsZXMvX3ZhcmlhYmxlcy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0UsZ0JBQUE7QUNERjtBREdFO0VBQ0UsY0VKSTtFRktKLGdCQUFBO0VBQ0Esa0JBQUE7QUNESjtBRElFO0VBQ0UsY0VWSTtFRldKLGNBQUE7RUFDQSxrQkFBQTtBQ0ZKO0FES0U7RUFDRSxrQkFBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtBQ0hKO0FES0k7RUFFRSxtQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsVUFBQTtBQ0pOO0FETU07RUFDRSxrQkFBQTtBQ0pSIiwiZmlsZSI6InNyYy9hcHAvc3R5bGVzL21vZGFscy5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi9fdmFyaWFibGVzJztcblxuLmFsZXJ0LW1vZGFsIHtcbiAgbWluLXdpZHRoOiAzMDBweDtcblxuICAuYWxlcnQtbW9kYWwtdGl0bGUge1xuICAgIGNvbG9yOiAkZ3JleTg7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICAuYWxlcnQtbW9kYWwtdGV4dCB7XG4gICAgY29sb3I6ICRncmV5ODtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICAuYWxlcnQtbW9kYWwtYnV0dG9ucyB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cbiAgICAuYWxlcnQtbW9kYWwtYnV0dG9uIHtcblxuICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICAgIG1hcmdpbi10b3A6IDQwcHg7XG4gICAgICBtaW4td2lkdGg6IDYwcHg7XG4gICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgd2lkdGg6IDYwJTtcblxuICAgICAgJi5hbGVydC1tb2RhbC1idXR0b24tc3VjY2VzcyB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICAgIH1cblxuICAgICAgJi5hbGVydC1tb2RhbC1idXR0b24tZmFpbHVyZSB7XG5cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi5hbGVydC1tb2RhbCB7XG4gIG1pbi13aWR0aDogMzAwcHg7XG59XG4uYWxlcnQtbW9kYWwgLmFsZXJ0LW1vZGFsLXRpdGxlIHtcbiAgY29sb3I6ICM0YTRhNGE7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5hbGVydC1tb2RhbCAuYWxlcnQtbW9kYWwtdGV4dCB7XG4gIGNvbG9yOiAjNGE0YTRhO1xuICBkaXNwbGF5OiBibG9jaztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmFsZXJ0LW1vZGFsIC5hbGVydC1tb2RhbC1idXR0b25zIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cbi5hbGVydC1tb2RhbCAuYWxlcnQtbW9kYWwtYnV0dG9ucyAuYWxlcnQtbW9kYWwtYnV0dG9uIHtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgbWFyZ2luLXRvcDogNDBweDtcbiAgbWluLXdpZHRoOiA2MHB4O1xuICBmb250LXdlaWdodDogNDAwO1xuICB3aWR0aDogNjAlO1xufVxuLmFsZXJ0LW1vZGFsIC5hbGVydC1tb2RhbC1idXR0b25zIC5hbGVydC1tb2RhbC1idXR0b24uYWxlcnQtbW9kYWwtYnV0dG9uLXN1Y2Nlc3Mge1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG59IiwiLy8gQ29sb3JzXG4kcHJpbWFyeTogIzNmNTFiNTtcbiRncmV5ODogIzRhNGE0YTtcbiRncmV5NDogI2UxZTFlMTtcbiRncmV5NTogIzU1NTtcbiJdfQ== */\"","export const environment = {\n  production: false,\n  api_url: 'https://td2dledk2l.execute-api.us-east-1.amazonaws.com'\n  };\n  ","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { LoopBackConfig } from '../sdk';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\nLoopBackConfig.setBaseURL(environment.api_url);\n\nLoopBackConfig.filterOnUrl()\n"],"sourceRoot":""}